trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: owaspzap@1
  inputs:
    threshold: '300'
    scantype: 'targetedScan'
    url: 'http://testphp.vulnweb.com/' # Replace with your target URL

- script: |
    # Create a directory to store the HTML report
    mkdir -p $(System.DefaultWorkingDirectory)/owaspzap-report

    # Create an HTML report file
    cat <<EOF > $(System.DefaultWorkingDirectory)/owaspzap-report/index.html
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>OWASP ZAP Scan Results</title>
        <style>
            /* Add CSS styles for formatting here */
            body {
                font-family: Arial, sans-serif;
            }
            table {
                width: 100%;
                border-collapse: collapse;
                margin-bottom: 20px;
            }
            th, td {
                border: 1px solid #ccc;
                padding: 8px;
                text-align: left;
            }
            th {
                background-color: #f2f2f2;
            }
            tr:nth-child(even) {
                background-color: #f2f2f2;
            }
        </style>
    </head>
    <body>
        <h1>OWASP ZAP Scan Results</h1>
        <table>
            <thead>
                <tr>
                    <th>Alert Name</th>
                    <th>Description</th>
                    <th>Solution</th>
                    <th>Reference</th>
                    <th>URI</th>
                    <th>HTTP Method</th>
                    <th>Evidence</th>
                </tr>
            </thead>
            <tbody>
                <!-- Use a loop to iterate through alerts and populate the table -->
                <tr>
                    <td>Alert 1</td>
                    <td>Description of Alert 1</td>
                    <td>Solution for Alert 1</td>
                    <td>Reference for Alert 1</td>
                    <td>/vulnerable-page</td>
                    <td>GET</td>
                    <td>No evidence available</td>
                </tr>
                <!-- Repeat this row structure for each alert -->
            </tbody>
        </table>
    </body>
    </html>
    EOF

    # Publish the HTML report as a build artifact
    echo "Publishing HTML report as an artifact..."
    echo "##vso[artifact.upload containerfolder=owaspzap-report;artifactname=OWASPZAPReport;]$(System.DefaultWorkingDirectory)/owaspzap-report"
  displayName: 'Generate and Publish HTML Report'
  condition: always()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/owaspzap-report'
    ArtifactName: 'OWASPZAPReport'

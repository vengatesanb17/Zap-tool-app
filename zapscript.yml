trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  zapVersion: '2.10.0'  # Update to the desired ZAP version
  websiteUrl: 'http://localhost:8089/'  # Replace with your website URL

steps:
- script: |
    # Download and install ZAP
    wget https://github.com/zaproxy/zaproxy/releases/download/v$(zapVersion)/ZAP_$(zapVersion)_Core.zip
    unzip ZAP_$(zapVersion)_Core.zip -d zap
    export PATH=$PATH:$(Agent.TempDirectory)/zap

    # Grant execute permissions to zap.sh
    chmod +x $(Agent.TempDirectory)/zap/zap.sh

    # Start ZAP in headless mode
    $(Agent.TempDirectory)/zap/zap.sh -daemon -port 8080 -config api.disablekey=true -config scanner.attackOnStart=true -addoninstall ascanrulesBeta -addoninstall pscanrulesBeta -addoninstall wappalyzer -addoninstall psnarules

    # Spider and scan your website
    $(Agent.TempDirectory)/zap/zap-cli -p 8080 -z "spider target=$(websiteUrl) recurse=1 maxchildren=10"
    $(Agent.TempDirectory)/zap/zap-cli -p 8080 -z "active-scan target=$(websiteUrl) recurse=1 maxchildren=10"

    # Generate the ZAP report in NUnit XML format
    $(Agent.TempDirectory)/zap/zap-cli -p 8080 -z "report -o $(Agent.TempDirectory)/zap-report.xml -f nunit-xml"
  displayName: 'Run ZAP Scan and Generate Report'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(Agent.TempDirectory)/zap-report.xml'
    testRunTitle: 'ZAP Scan'
    testRunSystem: 'ZAP'
    searchFolder: '$(Agent.TempDirectory)'
  displayName: 'Publish ZAP Test Results'

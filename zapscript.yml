trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: ZAPScan
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true
  - script: |
      # Install OWASP ZAP
      wget https://github.com/zaproxy/zaproxy/releases/download/v2.10.0/ZAP_2_10_0_unix.sh
      chmod +x ZAP_2_10_0_unix.sh
      ./ZAP_2_10_0_unix.sh -q

      # Start ZAP in daemon mode (use sudo if required)
      sudo /path/to/zap/zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.disablekey=true

      # Wait for ZAP to start
      sleep 10

      # Launch your web application or configure your browser to use ZAP as a proxy

      # Perform a Spider scan on the target URL (excluding specific patterns)
      /path/to/zap/zap.sh -cmd \
      "-config spider:excludeList='^http://testphp.vulnweb.com/excluded-path/.*'" \
      -addoninstall ascan

      /path/to/zap/zap.sh -cmd \
      "-quickurl http://testphp.vulnweb.com/"

      /path/to/zap/zap.sh -cmd \
      "-quickout /path/to/zap-report.html" \
      -addoninstall pscan
  displayName: 'Run ZAP Scan'



      
# - task: owaspzap@1
#   inputs:
#     aggressivemode: false
#     threshold: '232'
#     scantype: 'targetedScan'
#     url: 'http://testphp.vulnweb.com/'
#     port: 'http://testphp.vulnweb.com/:80'
#     provideCustomContext: true
#     contextPath: '/home/vsts/work/1/s/exclude-domains.js'
#   enabled: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(System.DefaultWorkingDirectory)/owaspzap'
#     ArtifactName: zap
# - bash: |
#    sudo npm install -g handlebars-cmd
#    cat <<EOF > owaspzap/nunit-template.hbs
#    {{#each site}}
#    <test-run
#        id="2"
#        name="Owasp test"
#        start-time="{{../[@generated]}}"  >
#        <test-suite
#            id="{{@index}}"
#            type="Assembly"
#            name="{{[@name]}}"
#            result="Failed"
#            failed="{{alerts.length}}">
#            <attachments>
#                <attachment>
#                    <filePath>owaspzap/report.html</filePath>
#                </attachment>
#            </attachments>
#        {{#each alerts}}<test-case
#            id="{{@index}}"
#            name="{{alert}}"
#            result="Failed"
#            fullname="{{alert}}"
#            time="1">
#                <failure>
#                    <message>
#                        <![CDATA[{{{desc}}}]]>
#                    </message>
#                    <stack-trace>
#                        <![CDATA[
#    Solution:
#    {{{solution}}}
#    Reference:
#    {{{reference}}}
#    instances:{{#each instances}}
#    * {{uri}}
#        - {{method}}
#        {{#if evidence}}- {{{evidence}}}{{/if}}
#                        {{/each}}]]>
#                    </stack-trace>
#                </failure>
#        </test-case>
#        {{/each}}
#        </test-suite>
#    </test-run>
#    {{/each}}
#    EOF
#   displayName: 'owasp nunit template'
#   enabled: true

# - task: PublishTestResults@2
#   displayName: 'Publish Test Results **/TEST-*.xml'
#   inputs:
#     testResultsFormat: NUnit
#     testResultsFiles: 'owaspzap/test-results.xml'
#   condition: always()
#   enabled: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(System.DefaultWorkingDirectory)/owaspzap'
#     ArtifactName: 'ZAP Reports'
#   enabled: true

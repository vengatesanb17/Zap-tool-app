trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'  # Update this to the path to your .sln file
  zapVersion: '2.10.0'  # Update to the desired ZAP version

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: dotnet restore
  displayName: 'Restore NuGet Packages'

- script: dotnet build --configuration Release
  displayName: 'Build .NET Application'

- script: dotnet publish --configuration Release --output $(Build.ArtifactStagingDirectory)
  displayName: 'Publish .NET Application'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'publish'
    publishLocation: 'Container'
  displayName: 'Publish .NET Application Artifacts'

- script: |
    # Download and install ZAP
    wget https://github.com/zaproxy/zaproxy/releases/download/v$(zapVersion)/ZAP_$(zapVersion)_Core.zip
    unzip ZAP_$(zapVersion)_Core.zip -d zap
    export PATH=$PATH:$(Agent.TempDirectory)/zap

    # Start ZAP in headless mode (use appropriate options for your website)
    zap.sh -daemon -port 8080 -config api.disablekey=true -config scanner.attackOnStart=true -addoninstall ascanrulesBeta -addoninstall pscanrulesBeta -addoninstall wappalyzer -addoninstall psnarules

    # Run ZAP against your website
    zap.sh -quickurl http://localhost:8089/ -quickout zap-report.html
  displayName: 'Run ZAP Scan'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'zap-report.html'
    testRunTitle: 'ZAP Scan'
    testRunSystem: 'ZAP'
  displayName: 'Publish ZAP Test Results'

